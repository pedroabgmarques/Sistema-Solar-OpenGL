//
//  main.c
//  TrabalhoFinal C_S2
//
//  Created by Miguel Vieira on 06/05/15.
//  Copyright (c) 2015 Miguel Vieira. All rights reserved.
//

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
//#include <unistd.h>

//AO COMPRAR, FAZER LISTA DE FAVORITOS PARA GUARDAR CARROS FAVORITOS NO SAVE.TXT

typedef struct registo
{
	char marca[20];
	int tipoDeCarro;
	int tipoDeMota;
	int tipoDeCamiao;
	int ano;
	int preco;
	char cor[15];
	int potencia;
	int vidrosEletricos;
	int descapotavel;
	int arCondicionado;
	int airbags;
	int precoEstimado;
	int precoEstimado2;
	int precoEstimado3;
	int diesel;
	char modelo[20];
	struct registo *seguinte;
}*carros;

carros carro;
carros carroPesquisaHead;
char tipoDeCarroNome[20];
char tipoDeMotaNome[20];
char tipoDeCamiaoNome[40];
FILE *txtRegisto;
int sair = 0;
int didRead = 0;

typedef struct seguro
{
	int tipoDeCarro;
	int ano;
	int preco;

	struct registo*seguinte;


}*registo;
//o resto ainda ta pronto

carros insereCarro(char marca[20], char modelo[20], int ano, int preco, char cor[15], int potencia, int diesel, int vidrosEletricos, int descapotavel, int arCondicionado, int airbags, int precoEstimado, int tipoDeCarro, carros end)
{

	carros newStruct = (carros)malloc(sizeof(struct registo));

	strcpy(newStruct->marca, marca);
	strcpy(newStruct->modelo, modelo);
	strcpy(newStruct->cor, cor);

	newStruct->ano = ano;
	newStruct->preco = preco;
	newStruct->potencia = potencia;
	newStruct->diesel = diesel;
	newStruct->vidrosEletricos = vidrosEletricos;
	newStruct->descapotavel = descapotavel;
	newStruct->arCondicionado = arCondicionado;
	newStruct->airbags = airbags;
	newStruct->precoEstimado = precoEstimado;
	newStruct->tipoDeCarro = tipoDeCarro;
	newStruct->seguinte = end;


	return newStruct;
}
carros insereMota(char marca[20], char modelo[20], int ano, int preco, char cor[15], int potencia, int precoEstimado2, int tipoDeCarro, int tipoDeMota, carros end)
{

	carros newStruct = (carros)malloc(sizeof(struct registo));

	strcpy(newStruct->marca, marca);
	strcpy(newStruct->modelo, modelo);
	strcpy(newStruct->cor, cor);

	newStruct->ano = ano;
	newStruct->preco = preco;
	newStruct->potencia = potencia;
	newStruct->precoEstimado2 = precoEstimado2;
	newStruct->tipoDeCarro = tipoDeCarro;
	newStruct->tipoDeMota = tipoDeMota;
	newStruct->seguinte = end;


	return newStruct;
}
carros insereCamiao(char marca[20], char modelo[20], int ano, int preco, char cor[15], int potencia, int diesel, int vidrosEletricos, int arCondicionado, int airbags, int precoEstimado3, int tipoDeCarro, int tipoDeCamiao, carros end)
{

	carros newStruct = (carros)malloc(sizeof(struct registo));

	strcpy(newStruct->marca, marca);
	strcpy(newStruct->modelo, modelo);
	strcpy(newStruct->cor, cor);

	newStruct->ano = ano;
	newStruct->preco = preco;
	newStruct->potencia = potencia;
	newStruct->diesel = diesel;
	newStruct->vidrosEletricos = vidrosEletricos;
	newStruct->arCondicionado = arCondicionado;
	newStruct->airbags = airbags;
	newStruct->precoEstimado3 = precoEstimado3;
	newStruct->tipoDeCarro = tipoDeCarro;
	newStruct->tipoDeCamiao = tipoDeCamiao;
	newStruct->seguinte = end;


	return newStruct;
}
//teste
int precoEstimado(char marca[20], char modelo[20], int ano, int potencia, int diesel, int vidrosEletricos, int descapotavel, int arCondicionado, int airbags, int tipo)
{
	int precoEst;

	if (tipo == 1)
	{
		precoEst = 9999;
	}
	else if (tipo == 2)
	{
		precoEst = 22000;
	}
	else if (tipo == 3)
	{
		precoEst = 250000;
	}
	else if (tipo == 4)
	{
		precoEst = 5000;
	}
	else if (tipo == 5)
	{
		precoEst = 30000;
	}
	else if (tipo == 6)
	{
		precoEst = 30000;
	}
	else if (tipo == 7)
	{
		precoEst = 14000;
	}
	else if (tipo == 8)
	{
		precoEst = 20000;
	}
	else
	{
		printf("Ocorreu um erro. Não selecionou o tipo de carro ou selecionou um tipo inexistente. Tente novamente.\n");
		return -1;
	}

	if (strcmp("BUGATTI", marca) == 0)
	{
		precoEst += 1200000;
	}
	else if (strcmp("FERRARI", marca) == 0)
	{
		precoEst += 70000;
	}
	else if ((strcmp("LAMBORGHINI", marca) == 0) || (strcmp("MASERATI", marca) == 0) || (strcmp("PORCSHE", marca) == 0) || (strcmp("ASTON MARTIN", marca) == 0))
	{
		precoEst += 50000;
	}
	else if ((strcmp("MERCEDES", marca) == 0) || (strcmp("MERCEDES BENZ", marca) == 0) || (strcmp("BMW", marca) == 0) || (strcmp("B.M.W", marca) == 0) || (strcmp("JAGUAR", marca) == 0) || (strcmp("ROLLS ROYCE", marca) == 0) || (strcmp("BENTLEY", marca) == 0) || (strcmp("ABARTH", marca) == 0))
	{
		precoEst += 30000;
	}
	else if ((strcmp("ALFA ROMEO", marca) == 0) || (strcmp("AUDI", marca) == 0) || (strcmp("VOLVO", marca) == 0) || (strcmp("K.T.M", marca) == 0) || (strcmp("KTM", marca) == 0) || (strcmp(" ROMEO", marca) == 0) || (strcmp("KAWASAKI", marca) == 0))
	{
		precoEst += 10000;
	}


	if (potencia >= 120 && potencia<300)
	{
		precoEst += 15 * potencia;
	}
	else if (potencia >= 300 && potencia<500)
	{
		precoEst += potencia * 50;
	}
	else if (potencia>500)
	{
		precoEst += potencia * 150;
	}
	//
	if (tipo != 3)
	{
		if (vidrosEletricos == 1)
		{
			precoEst += 300;
		}
		else
		{
			precoEst -= 300;
		}

		if (descapotavel == 1)
		{
			precoEst += 5000;
		}

		if (arCondicionado == 1)
		{
			precoEst += 300;
		}
		else
		{
			precoEst -= 300;
		}
		if (airbags>0)
		{
			precoEst += airbags * 80;
		}
		else
		{
			precoEst -= 300;
		}

	}
	int anoASub = ano;
	if (anoASub>3)
		anoASub = 3;
	for (int i = 0; i<anoASub; i++)
	{
		if (precoEst<150000)
			precoEst -= precoEst / 6;
		else
			precoEst -= precoEst / 14;
	}

	if (ano >= 4 && ano <= 11)
	{
		precoEst -= (ano - 3)*precoEst / 14;
	}
	if (ano>11 && ano<35)
	{
		for (int i = 0; i<11; i++)
			precoEst -= precoEst / 14;

		precoEst -= (ano - 3)*precoEst / 18;

	}
	if (ano>35)
	{
		int anosAsubtrair = (ano - 35);
		if (anosAsubtrair>70)
			anosAsubtrair = 70;
		for (int i = 0; i<anosAsubtrair; i++)
			if (strcmp("MERCEDES", marca))
				precoEst += precoEst / 80;
			else
				precoEst += precoEst / 100;
	}
	if (diesel == 1)
	{
		if (precoEst >= 10000)
			precoEst += precoEst / 10;
		else
			precoEst += precoEst / 7;
	}
	if (precoEst<300)
	{
		precoEst = 300;
	}

	return precoEst;
}
int precoEstimado2(char marca[20], char modelo[20], int ano, int potencia, int tipoDeMotaNome)
{
	int precoEst2;

	if (tipoDeMotaNome == 1)
	{
		precoEst2 = 15000;
	}
	else if (tipoDeMotaNome == 2)
	{
		precoEst2 = 5000;
	}
	else if (tipoDeMotaNome == 3)
	{
		precoEst2 = 1000;
	}
	else if (tipoDeMotaNome == 4)
	{
		precoEst2 = 10000;
	}
	else if (tipoDeMotaNome == 5)
	{
		precoEst2 = 5000;
	}
	else if (tipoDeMotaNome == 6)
	{
		precoEst2 = 5000;
	}
	else if (tipoDeMotaNome == 7)
	{
		precoEst2 = 3000;
	}
	else if (tipoDeMotaNome == 8)
	{
		precoEst2 = 3000;
	}

	else
	{
		printf("Ocorreu um erro. Não selecionou o tipo de carro ou selecionou um tipo inexistente. Tente novamente.\n");
		return -1;
	}


	if ((strcmp("HARLEY DAVIDSON", marca) == 0))
	{
		precoEst2 += 5000;
	}
	else if ((strcmp("BMW", marca) == 0) || (strcmp("DUCATI", marca) == 0) || (strcmp("B.M.W", marca) == 0) || (strcmp("YAMAHA", marca) == 0))
	{
		precoEst2 += 6000;
	}
	else if ((strcmp("K.T.M", marca) == 0) || (strcmp("KTM", marca) == 0) || (strcmp("KAWASAKI", marca) == 0))
	{
		precoEst2 += 3000;
	}



	if (potencia >= 50 && potencia <250)
	{
		precoEst2 += 1 * potencia;
	}
	else if (potencia >= 250 && potencia <750)
	{
		precoEst2 += potencia * 5;
	}
	else if (potencia >= 750 && potencia <1300)
	{
		precoEst2 += potencia * 6;
	}
	else if (potencia >1300)
	{
		precoEst2 += potencia * 8;
	}

	if (ano >= 3)
	{
		for (int i = 0; i<3; i++)
			precoEst2 -= precoEst2 / 6;
	}
	if (ano >= 4 && ano <= 11)
	{
		precoEst2 -= (ano - 3)*precoEst2 / 14;
	}
	if (ano>11 && ano<20)
	{
		for (int i = 0; i<11; i++)
			precoEst2 -= precoEst2 / 14;

		precoEst2 -= (ano - 3)*precoEst2 / 18;

	}
	if (ano>25)
	{
		int anosAsubtrair = (ano - 20);
		if (anosAsubtrair>70)
			anosAsubtrair = 70;
		for (int i = 0; i<anosAsubtrair; i++)
			precoEst2 += precoEst2 / 15;
	}

	if (precoEst2<300)
	{
		precoEst2 = 300;
	}
	return precoEst2;
}
int precoEstimado3(char marca[20], char modelo[20], int ano, int potencia, int diesel, int vidrosEletricos, int arCondicionado, int airbags, int tipoDeCamiaoNome)
{
	int precoEst3;

	if (tipoDeCamiaoNome == 1)
	{
		precoEst3 = 15000;
	}
	else if (tipoDeCamiaoNome == 2)
	{
		precoEst3 = 19000;
	}
	else if (tipoDeCamiaoNome == 3)
	{
		precoEst3 = 35000;
	}
	else if (tipoDeCamiaoNome == 4)
	{
		precoEst3 = 25000;
	}

	else
	{
		printf("Ocorreu um erro. Não selecionou o tipo de carro ou selecionou um tipo inexistente. Tente novamente.\n");
		return -1;
	}


	if ((strcmp("VOLVO", marca) == 0) || (strcmp("MERCEDES BENZ", marca) == 0) || (strcmp("MAN", marca) == 0))
	{
		precoEst3 += 10000;
	}


	if (potencia >= 120 && potencia<300)
	{
		precoEst3 += 15 * potencia;
	}
	else if (potencia >= 300 && potencia<500)
	{
		precoEst3 += potencia * 50;
	}
	else if (potencia>500)
	{
		precoEst3 += potencia * 150;
	}
	//
	if (vidrosEletricos == 1)
	{
		precoEst3 += 300;
	}
	else
	{
		precoEst3 -= 300;
	}

	if (arCondicionado == 1)
	{
		precoEst3 += 300;
	}
	else
	{
		precoEst3 -= 300;
	}
	if (airbags>0)
	{
		precoEst3 += airbags * 80;
	}
	else
	{
		precoEst3 -= 300;
	}


	int anoASub = ano;
	if (anoASub>3)
		anoASub = 3;
	for (int i = 0; i<anoASub; i++)
	{
		if (precoEst3<150000)
			precoEst3 -= precoEst3 / 12;
		else
			precoEst3 -= precoEst3 / 14;
	}

	if (ano >= 4 && ano <= 11)
	{
		precoEst3 -= precoEst3 / 20;
	}
	if (ano>11 && ano<35)
	{
		for (int i = 0; i<11; i++)
			precoEst3 -= precoEst3 / 20;

		precoEst3 -= (ano - 14)*precoEst3 / 18;

	}
	if (ano>35)
	{
		int anosAsubtrair = (ano - 35);
		if (anosAsubtrair>70)
			anosAsubtrair = 70;
		for (int i = 0; i<anosAsubtrair; i++)
			precoEst3 += precoEst3 / 100;
	}
	if (diesel == 1)
	{
		if (precoEst3 >= 10000)
			precoEst3 += precoEst3 / 10;
		else
			precoEst3 += precoEst3 / 7;
	}
	if (precoEst3<300)
	{
		precoEst3 = 300;
	}

	return precoEst3;
}

void getCarType(int tipoCarroNum, int tipoMotaNum, int tipoCamiaoNum)
{

	if (tipoCarroNum == 1)
	{
		strcpy(tipoDeCarroNome, "Comercial");
	}
	else if (tipoCarroNum == 2)
	{
		strcpy(tipoDeCarroNome, "Desportivo");
	}
	else if (tipoCarroNum == 3)
	{
		strcpy(tipoDeCarroNome, "Supercarro");
	}
	else if (tipoCarroNum == 4)
	{
		strcpy(tipoDeCarroNome, "Mota");

		if (tipoMotaNum == 1)
		{
			strcpy(tipoDeMotaNome, "Chopper");
		}
		if (tipoMotaNum == 2)
		{
			strcpy(tipoDeMotaNome, "Quadriciclo");
		}
		if (tipoMotaNum == 3)
		{
			strcpy(tipoDeMotaNome, "Scooter");
		}
		if (tipoMotaNum == 4)
		{
			strcpy(tipoDeMotaNome, "Trail");
		}
		if (tipoMotaNum == 5)
		{
			strcpy(tipoDeMotaNome, "SuperSport");
		}
		if (tipoMotaNum == 6)
		{
			strcpy(tipoDeMotaNome, "Turismo");
		}
		if (tipoMotaNum == 7)
		{
			strcpy(tipoDeMotaNome, "Todo-o-Terreno");
		}
		if (tipoMotaNum == 8)
		{
			strcpy(tipoDeMotaNome, "Mota 125");
		}

	}
	else if (tipoCarroNum == 5)
	{
		strcpy(tipoDeCarroNome, "Camião");

		if (tipoCamiaoNum == 1)
		{
			strcpy(tipoDeCamiaoNome, "Pesados 3.5t até 7.5t");
		}
		else if (tipoCamiaoNum == 2)
		{
			strcpy(tipoDeCamiaoNome, "Pesados com mais de 7.5t");
		}
		else if (tipoCamiaoNum == 3)
		{
			strcpy(tipoDeCamiaoNome, "Basculante");
		}
		else if (tipoCamiaoNum == 4)
		{
			strcpy(tipoDeCamiaoNome, "Trator de Semi Reboque");
		}
	}
	else if (tipoCarroNum == 6)
	{
		strcpy(tipoDeCarroNome, "Jipe");
	}
	else if (tipoCarroNum == 7)
	{
		strcpy(tipoDeCarroNome, "Citadino");
	}
	else if (tipoCarroNum == 8)
	{
		strcpy(tipoDeCarroNome, "Familiar");
	}
}

void ProcurarMarca(int tipo)
{
	carros list = carro;
	char marca[20];
	int encontrado = 0;
	printf("Insira a marca que pretende encontrar:\n");
	scanf(" %[^\n]s", marca);
	for (int i = 0; i<strlen(marca); i++)
		marca[i] = toupper(marca[i]);

	while (list != NULL) {
		if (strcmp("", list->marca) != 0) {
			if (tipo == 1)
			{
				if (strcmp(marca, list->marca) == 0){
					getCarType(list->tipoDeCarro, list->tipoDeMota, list->tipoDeCamiao);
					if (list->tipoDeCarro != 4 && list->tipoDeCarro != 5)
					{

						printf("\n%s, %s, %d, %s, %s, %dcv\n", list->marca, list->modelo, (2015 - list->ano), tipoDeCarroNome, list->cor, list->potencia);

						printf("Airbags: %d\n", list->airbags);
						if (list->vidrosEletricos == 1)
							printf("Vidros Elétricos: Sim\n");
						else
							printf("Vidros Elétricos: Não\n");
						if (list->arCondicionado == 1)
							printf("Ar Condicionado: Sim\n");
						else
							printf("Ar Condicionado: Não\n");
						if (list->descapotavel == 1)
							printf("Descapotável: Sim \n");
						else
							printf("Descapotável: Não \n");
						if (list->diesel == 1)
							printf("Combustivel: Diesel \n\n");
						else
							printf("Combustivel: Gasolina \n\n");

						printf("Preço: %d\n\n", list->preco);

						if (list->precoEstimado>list->preco)
							printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (list->precoEstimado - list->preco));
						else if (list->preco>list->precoEstimado)
							printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (list->preco - list->precoEstimado));
						else
							printf("Este veículo tem o preço que prevíamos.\n\n");
						encontrado = 1;
					}
				}
			}
			else if (tipo == 3)
			{
				if (strcmp(marca, list->marca) == 0){

					if (list->tipoDeCarro == 4)
					{
						printf("\n%s, %s, %d, %s, %d cm3\n\n", list->marca, list->modelo, (2015 - list->ano), list->cor, list->potencia);

						printf("Preço: %d\n\n", list->preco);

						if (list->precoEstimado2>list->preco)
							printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (list->precoEstimado2 - list->preco));
						else if (list->preco>list->precoEstimado2)
							printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (list->preco - list->precoEstimado2));
						else
							printf("Este veículo tem o preço que prevíamos.\n\n");
						encontrado = 1;

					}

				}
			}
			else if (tipo == 2)
			{
				if (strcmp(marca, list->marca) == 0){

					if (list->tipoDeCarro == 5)
					{
						printf("\n%s, %s, %d, %s, %dcv\n", list->marca, list->modelo, (2015 - list->ano), list->cor, list->potencia);
						printf("Airbags: %d\n", list->airbags);
						if (list->vidrosEletricos == 1)
							printf("Vidros Elétricos: Sim\n");
						else
							printf("Vidros Elétricos: Não\n");
						if (list->arCondicionado == 1)
							printf("Ar Condicionado: Sim\n");
						else
							printf("Ar Condicionado: Não\n");
						if (list->diesel == 1)
							printf("Combustivel: Diesel \n\n");
						else
							printf("Combustivel: Gasolina \n\n");

						printf("Preço: %d\n\n", list->preco);

						if (list->precoEstimado3>list->preco)
							printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (list->precoEstimado3 - list->preco));
						else if (list->preco>list->precoEstimado3)
							printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (list->preco - list->precoEstimado3));
						else
							printf("Este veículo tem o preço que prevíamos.\n\n");
						encontrado = 1;

					}
				}
			}
		}
		list = list->seguinte;
	}
	if (encontrado == 0)
	{
		printf("Não foi encontrado nenhum veículo da marca %s\n\n", marca);
		if ((strcmp("MERCEDES", marca) == 0) || (strcmp("ALFA", marca) == 0))
			printf("Dica: Use o nome completo das marcas. Ex: \"Mercedes Benz\" e não \"Mercedes\"\n\n");

	}
}

void ProcurarIdade(int tipo)
{
	carros list = carro;
	int idadeMinima = 0;
	int idadeMaxima = 0;
	int encontrado = 0;
	printf("Insira a idade mínima do veículo:\n");
	scanf("%d", &idadeMinima);
	printf("Insira a idade máxima do veículo:\n");
	scanf("%d", &idadeMaxima);
	if (tipo == 2)
		tipo = 5;
	else if (tipo == 3)
		tipo = 4;
	else if (tipo == 1)
		tipo = 0;

	while (list != NULL) {

		if (list->ano >= idadeMinima && list->ano <= idadeMaxima && (list->tipoDeCarro == tipo || (tipo == 0 && list->tipoDeCarro != 4 && list->tipoDeCarro != 5)) && (strcmp("", list->marca) != 0)) {
			getCarType(list->tipoDeCarro, list->tipoDeMota, list->tipoDeCamiao);

			if (list->tipoDeCarro == 4)
				printf("\n%s,%s, %d, %s, %s, %dcv\n", list->marca, list->modelo, (2015 - list->ano), tipoDeMotaNome, list->cor, list->potencia);
			else if (list->tipoDeCarro == 5)
				printf("\n%s,%s, %d, %s, %s, %dcv\n", list->marca, list->modelo, (2015 - list->ano), tipoDeCamiaoNome, list->cor, list->potencia);
			else
				printf("\n%s,%s, %d, %s, %s, %dcv\n", list->marca, list->modelo, (2015 - list->ano), tipoDeCarroNome, list->cor, list->potencia);

			if (list->tipoDeCarro != 4 && list->tipoDeCarro != 5)
			{
				if (list->descapotavel == 1)
					printf("Descapotável: Sim \n");
				else
					printf("Descapotável: Não \n");
			}
			if (list->tipoDeCarro != 4)
			{
				printf("Airbags: %d\n", list->airbags);
				if (list->vidrosEletricos == 1)
					printf("Vidros Elétricos: Sim\n");
				else
					printf("Vidros Elétricos: Não\n");
				if (list->arCondicionado == 1)
					printf("Ar Condicionado: Sim\n");
				else
					printf("Ar Condicionado: Não\n");

				if (list->diesel == 1)
					printf("Combustivel: Diesel \n\n");
				else
					printf("Combustivel: Gasolina \n\n");
			}

			printf("Preço: %d\n\n", list->preco);

			if (list->precoEstimado>list->preco)
				printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (list->precoEstimado - list->preco));
			else if (list->preco>list->precoEstimado)
				printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (list->preco - list->precoEstimado));
			else
				printf("Este veículo tem o preço que prevíamos.\n\n");
			encontrado = 1;
		}
		list = list->seguinte;
	}
	if (encontrado == 0)
	{
		printf("Não foi encontrado nenhum veículo nesse intervalo de idade \n");
	}
}
void ProcurarPotencia(int tipo)
{
	carros list = carro;
	int potenciaMinima = 0;
	int potenciaMaxima = 0;
	int encontrado = 0;
	int times = 0;
	if (tipo == 3)
	{
		printf("Insira a potência mínima(cm3) da mota:\n");
		scanf("%d", &potenciaMinima);
		printf("Insira a potência máxima(cm3) da mota:\n");
		scanf("%d", &potenciaMaxima);
	}
	else
	{
		printf("Insira a potência mínima(cv) do veículo:\n");
		scanf("%d", &potenciaMinima);
		printf("Insira a potência máxima(cv) do veículo:\n");
		scanf("%d", &potenciaMaxima);
	}
	if (tipo == 2)
		tipo = 5;
	else if (tipo == 3)
		tipo = 4;
	else if (tipo == 1)
		tipo = 0;

	while (list != NULL) {

		if (list->potencia >= potenciaMinima && list->potencia <= potenciaMaxima && (list->tipoDeCarro == tipo || (tipo == 0 && list->tipoDeCarro != 4 && list->tipoDeCarro != 5)) && (strcmp("", list->marca) != 0))
		{
			getCarType(list->tipoDeCarro, list->tipoDeMota, list->tipoDeCamiao);

			if (list->tipoDeCarro == 4)
				printf("\n%s,%s, %d, %s, %s, %dcv\n", list->marca, list->modelo, (2015 - list->ano), tipoDeMotaNome, list->cor, list->potencia);
			else if (list->tipoDeCarro == 5)
				printf("\n%s,%s, %d, %s, %s, %dcv\n", list->marca, list->modelo, (2015 - list->ano), tipoDeCamiaoNome, list->cor, list->potencia);
			else
				printf("\n%s,%s, %d, %s, %s, %dcv\n", list->marca, list->modelo, (2015 - list->ano), tipoDeCarroNome, list->cor, list->potencia);

			if (list->tipoDeCarro != 4 && list->tipoDeCarro != 5)
			{
				if (list->descapotavel == 1)
					printf("Descapotável: Sim \n");
				else
					printf("Descapotável: Não \n");
			}
			if (list->tipoDeCarro != 4)
			{
				printf("Airbags: %d\n", list->airbags);
				if (list->vidrosEletricos == 1)
					printf("Vidros Elétricos: Sim\n");
				else
					printf("Vidros Elétricos: Não\n");
				if (list->arCondicionado == 1)
					printf("Ar Condicionado: Sim\n");
				else
					printf("Ar Condicionado: Não\n");

				if (list->diesel == 1)
					printf("Combustivel: Diesel \n\n");
				else
					printf("Combustivel: Gasolina \n\n");
			}

			printf("Preço: %d\n\n", list->preco);

			if (list->tipoDeCarro == 4)
			{
				if (list->precoEstimado2>list->preco)
					printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (list->precoEstimado2 - list->preco));
				else if (list->preco>list->precoEstimado2)
					printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (list->preco - list->precoEstimado2));
				else
					printf("Este veículo tem o preço que prevíamos.\n\n");
			}
			else if (list->tipoDeCarro == 5)
			{
				if (list->precoEstimado3>list->preco)
					printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (list->precoEstimado3 - list->preco));
				else if (list->preco>list->precoEstimado3)
					printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (list->preco - list->precoEstimado3));
				else
					printf("Este veículo tem o preço que prevíamos.\n\n");
			}
			else
			{
				if (list->precoEstimado>list->preco)
					printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (list->precoEstimado - list->preco));
				else if (list->preco>list->precoEstimado)
					printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (list->preco - list->precoEstimado));
				else
					printf("Este veículo tem o preço que prevíamos.\n\n");
			}

			encontrado = 1;
		}
		times++;
		list = list->seguinte;
	}
	if (encontrado == 0)
	{
		printf("Não foi encontrado nenhum veículo nesse intervalo de potência \n");
	}
}

void VerTodos(int tipo)
{
	carros temp = carro;
	int times = 0;
	while (temp != NULL)
	{
		if (strcmp("", temp->marca) != 0)
		{
			getCarType(temp->tipoDeCarro, temp->tipoDeMota, temp->tipoDeCamiao);

			if (tipo == 1)
			{
				if (temp->tipoDeCarro != 4 && temp->tipoDeCarro != 5)
				{
					printf("\n%s, %s, %d, %s, %s, %dcv\nAirbags: %d\n", temp->marca, temp->modelo, (2015 - temp->ano), tipoDeCarroNome, temp->cor, temp->potencia, temp->airbags);
					if (temp->vidrosEletricos == 1)
						printf("Vidros Elétricos: Sim\n");
					else
						printf("Vidros Elétricos: Não\n");
					if (temp->arCondicionado == 1)
						printf("Ar Condicionado: Sim\n");
					else
						printf("Ar Condicionado: Não\n");
					if (temp->descapotavel == 1)
						printf("Descapotável: Sim \n");
					else
						printf("Descapotável: Não \n");
					if (temp->diesel == 1)
						printf("Combustivel: Diesel \n\n");
					else
						printf("Combustivel: Gasolina \n\n");

					printf("Preço: %d\n\n", temp->preco);

					if (temp->precoEstimado>temp->preco)
						printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (temp->precoEstimado - temp->preco));
					else if (temp->preco>temp->precoEstimado)
						printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (temp->preco - temp->precoEstimado));
					else
						printf("Este veículo tem o preço que prevíamos.\n\n");

				}
			}
			else if (tipo == 2)
			{
				if (temp->tipoDeCarro == 5)
				{
					printf("\n%s,%s, %d, %s, %s, %dcv\n", temp->marca, temp->modelo, (2015 - temp->ano), tipoDeCamiaoNome, temp->cor, temp->potencia);
					if (temp->vidrosEletricos == 1)
						printf("Vidros Elétricos: Sim\n");
					else
						printf("Vidros Elétricos: Não\n");
					if (temp->arCondicionado == 1)
						printf("Ar Condicionado: Sim \n");
					else
						printf("Ar Condicionado: Não \n");
					if (temp->diesel == 1)
						printf("Combustivel: Diesel \n\n");
					else
						printf("Combustivel: Gasolina \n\n");

					printf("Preço: %d\n\n", temp->preco);

					if (temp->precoEstimado3>temp->preco)
						printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (temp->precoEstimado3 - temp->preco));
					else if (temp->preco>temp->precoEstimado3)
						printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (temp->preco - temp->precoEstimado3));
					else
						printf("Este veículo tem o preço que prevíamos.\n\n");
				}
			}
			else if (tipo == 3)
			{
				if (temp->tipoDeCarro == 4)
				{
					printf("\n%s, %s, %d, %s, %s, %d cm3\n\n", temp->marca, temp->modelo, (2015 - temp->ano), temp->cor, tipoDeMotaNome, temp->potencia);

					printf("Preço: %d\n\n", temp->preco);

					if (temp->precoEstimado2>temp->preco)
						printf("Ao comprar este veículo prevemos que vá economizar %d\n\n", (temp->precoEstimado2 - temp->preco));
					else if (temp->preco>temp->precoEstimado2)
						printf("As nossas previsões indicam que este veículo está %d mais caro do que devia.\n\n", (temp->preco - temp->precoEstimado2));
					else
						printf("Este veículo tem o preço que prevíamos.\n\n");
				}
			}
		}
		if (times<1)
			times++;
		temp = temp->seguinte;
	}
	printf("\n");
}

void PesquisaAvancada()
{
	char marca[20];
	carros carrosProcura = NULL;
	carros list = carro;
	int criouLista = 0;
	int tipoDeCarro;
	printf("Introduza o nome da marca do carro que pretende encontrar. Se não tiver preferências neste parâmetro escreva \"nenhuma\"\n\n");
	scanf(" %[^\n]s", marca);
	for (int i = 0; i<strlen(marca); i++)
		marca[i] = toupper(marca[i]);
	if (strcmp("NENHUMA", marca) != 0)
	{
		while (list != NULL) {
			if (strcmp(marca, list->marca) == 0) {
				carrosProcura = (carros)malloc(sizeof(struct registo));
				carrosProcura->airbags = list->airbags;
				carrosProcura->ano = list->ano;
				carrosProcura->arCondicionado = list->arCondicionado;
				carrosProcura->descapotavel = list->descapotavel;
				carrosProcura->potencia = list->potencia;
				carrosProcura->diesel = list->diesel;
				carrosProcura->preco = list->preco;
				carrosProcura->precoEstimado = list->precoEstimado;
				carrosProcura->precoEstimado2 = list->precoEstimado2;
				carrosProcura->precoEstimado3 = list->precoEstimado3;
				carrosProcura->tipoDeCarro = list->tipoDeCarro;
				carrosProcura->tipoDeMota = list->tipoDeMota;
				carrosProcura->tipoDeCamiao = list->tipoDeCamiao;
				carrosProcura->vidrosEletricos = list->vidrosEletricos;
				strcpy(list->marca, carrosProcura->marca);
				strcpy(list->modelo, carrosProcura->modelo);
				strcpy(list->cor, carrosProcura->cor);
				printf("%s", carrosProcura->marca);
				carrosProcura->seguinte = carroPesquisaHead;
				carroPesquisaHead = carrosProcura;
				criouLista = 1;
			}
			list = list->seguinte;

		}
	}
	//carrosProcura=carro;
	/* while (carrosProcura!=NULL) {
	printf("%s\n", carrosProcura->marca);
	carrosProcura=carrosProcura->seguinte;
	}*/
	printf("Qual o tipo de veículo que deseja? Insira 1 para Comercial(2 lugares), 2 para  desportivo, 3 para supercarro, 4 para mota, 5 para camião, 6 para jipe, 7 para citadino,8 para familiar\n");
	scanf("%d", &tipoDeCarro);
	if (criouLista == 0)
	{
		while (list != NULL) {
			if (list->tipoDeCarro == tipoDeCarro)
			{
				carrosProcura = malloc(sizeof(registo));
				carrosProcura->airbags = list->airbags;
				carrosProcura->ano = list->ano;
				carrosProcura->arCondicionado = list->arCondicionado;
				carrosProcura->descapotavel = list->descapotavel;
				carrosProcura->potencia = list->potencia;
				carrosProcura->diesel = list->diesel;
				carrosProcura->preco = list->preco;
				carrosProcura->precoEstimado = list->precoEstimado;
				carrosProcura->precoEstimado2 = list->precoEstimado2;
				carrosProcura->precoEstimado3 = list->precoEstimado3;
				carrosProcura->tipoDeCarro = list->tipoDeCarro;
				carrosProcura->tipoDeMota = list->tipoDeMota;
				carrosProcura->tipoDeCamiao = list->tipoDeCamiao;
				carrosProcura->vidrosEletricos = list->vidrosEletricos;
				strcpy(list->marca, carrosProcura->marca);
				strcpy(list->modelo, carrosProcura->modelo);
				strcpy(list->cor, carrosProcura->cor);
				carrosProcura->seguinte = carroPesquisaHead;
				carroPesquisaHead = carrosProcura;
			}
			list = list->seguinte;

		}

	}
	else
	{
		while (carrosProcura != NULL) {
			if (carrosProcura->tipoDeCarro != tipoDeCarro)
			{
				carros temp2 = carrosProcura->seguinte;
				carrosProcura->seguinte = temp2->seguinte;
				free(temp2);

			}
			carrosProcura = carrosProcura->seguinte;

		}
	}
	carrosProcura = carro;
	while (carrosProcura != NULL) {
		printf("%s\n", carrosProcura->marca);
		carrosProcura = carrosProcura->seguinte;
	}

}

void Save()
{
	txtRegisto = fopen("registoVeículos.txt", "w");
	carros list = carro;
	while (list != NULL) {
		fprintf(txtRegisto, "%d ", list->tipoDeCarro);
		if (list->tipoDeCarro == 4)
		{
			fputs(list->marca, txtRegisto);
			fputs("\n", txtRegisto);
			fputs(list->modelo, txtRegisto);
			fputs("\n", txtRegisto);
			fputs(list->cor, txtRegisto);
			fputs(" ", txtRegisto);
			fprintf(txtRegisto, "%d ", list->ano);
			fprintf(txtRegisto, "%d ", list->tipoDeMota);
			fprintf(txtRegisto, "%d ", list->potencia);
			fprintf(txtRegisto, "%d ", list->preco);
			fprintf(txtRegisto, "%d ", list->precoEstimado2);
		}
		else if (list->tipoDeCarro == 5)
		{
			fputs(list->marca, txtRegisto);
			fputs("\n", txtRegisto);
			fputs(list->modelo, txtRegisto);
			fputs("\n", txtRegisto);
			fputs(list->cor, txtRegisto);
			fputs(" ", txtRegisto);
			fprintf(txtRegisto, "%d ", list->ano);
			fprintf(txtRegisto, "%d ", list->tipoDeCamiao);
			fprintf(txtRegisto, "%d ", list->potencia);
			fprintf(txtRegisto, "%d ", list->airbags);
			fprintf(txtRegisto, "%d ", list->vidrosEletricos);
			fprintf(txtRegisto, "%d ", list->arCondicionado);
			fprintf(txtRegisto, "%d ", list->diesel);
			fprintf(txtRegisto, "%d ", list->preco);
			fprintf(txtRegisto, "%d ", list->precoEstimado3);
		}
		else
		{
			fputs(list->marca, txtRegisto);
			fputs("\n", txtRegisto);
			fputs(list->modelo, txtRegisto);
			fputs("\n", txtRegisto);
			fputs(list->cor, txtRegisto);
			fputs(" ", txtRegisto);
			fprintf(txtRegisto, "%d ", list->airbags);
			fprintf(txtRegisto, "%d ", list->ano);
			fprintf(txtRegisto, "%d ", list->arCondicionado);
			fprintf(txtRegisto, "%d ", list->descapotavel);
			fprintf(txtRegisto, "%d ", list->potencia);
			fprintf(txtRegisto, "%d ", list->preco);
			fprintf(txtRegisto, "%d ", list->precoEstimado);
			fprintf(txtRegisto, "%d ", list->vidrosEletricos);
			fprintf(txtRegisto, "%d ", list->diesel);
		}
		//fprintf(txtRegisto, "\n");
		list = list->seguinte;
	}
	fclose(txtRegisto);
}

void Open()
{
	txtRegisto = fopen("registoVeículos.txt", "r");

	//if( access( "registoVeículos.txt", 0 ) != -1 )
	if (txtRegisto != NULL)
	{
		didRead = 1;
		while (!feof(txtRegisto)) {
			carros list = (carros)malloc(sizeof(struct registo));
			fscanf(txtRegisto, "%d", &list->tipoDeCarro);
			if (list->tipoDeCarro == 4)
			{
				fscanf(txtRegisto, " %[^\n]s", list->marca);
				fscanf(txtRegisto, " %[^\n]s", list->modelo);
				fscanf(txtRegisto, "%s", list->cor);
				fscanf(txtRegisto, "%d", &list->ano);
				fscanf(txtRegisto, "%d", &list->tipoDeMota);
				fscanf(txtRegisto, "%d", &list->potencia);
				fscanf(txtRegisto, "%d", &list->preco);
				fscanf(txtRegisto, "%d", &list->precoEstimado2);
			}
			else if (list->tipoDeCarro == 5)
			{
				fscanf(txtRegisto, " %[^\n]s", list->marca);
				fscanf(txtRegisto, " %[^\n]s", list->modelo);
				fscanf(txtRegisto, "%s", list->cor);
				fscanf(txtRegisto, "%d", &list->ano);
				fscanf(txtRegisto, "%d", &list->tipoDeCamiao);
				fscanf(txtRegisto, "%d", &list->potencia);
				fscanf(txtRegisto, "%d", &list->airbags);
				fscanf(txtRegisto, "%d", &list->vidrosEletricos);
				fscanf(txtRegisto, "%d", &list->arCondicionado);
				fscanf(txtRegisto, "%d", &list->diesel);
				fscanf(txtRegisto, "%d", &list->preco);
				fscanf(txtRegisto, "%d", &list->precoEstimado3);
			}
			else
			{
				fscanf(txtRegisto, " %[^\n]s", list->marca);
				fscanf(txtRegisto, " %[^\n]s", list->modelo);
				fscanf(txtRegisto, "%s", list->cor);
				fscanf(txtRegisto, "%d", &list->airbags);
				fscanf(txtRegisto, "%d", &list->ano);
				fscanf(txtRegisto, "%d", &list->arCondicionado);
				fscanf(txtRegisto, "%d", &list->descapotavel);
				fscanf(txtRegisto, "%d", &list->potencia);
				fscanf(txtRegisto, "%d", &list->preco);
				fscanf(txtRegisto, "%d", &list->precoEstimado);
				fscanf(txtRegisto, "%d", &list->vidrosEletricos);
				fscanf(txtRegisto, "%d", &list->diesel);
			}
			list->seguinte = carro;
			carro = list;
		}

		fclose(txtRegisto);

	}
	else
	{
		didRead = 0;
	}
}

void menu()
{
	int tipoDeEscolha;
	int escolha;
	char marca[20];
	char modelo[20];
	int tipoDeCarro;
	int tipoDeMotaNome = 0;
	int tipoDeCamiaoNome = 0;
	int ano;
	int preco;
	char cor[15];
	int potencia = 0;
	int diesel = 0;
	int vidrosEletricos = 2;
	int descapotavel = 0;
	int arCondicionado = 0;
	int airbag = 0;
	printf("Bem vindo ao Gestor de venda e compra de veículos usados.\nInsira:\n 1- Para comprar\n 2- Para vender\n 3-Guardar e Sair\n");
	scanf("%d", &escolha);

	if (escolha == 1)
	{
		escolha = 0;
		printf("Insira o tipo de veículo:\n 1-Carros\n 2-Camiões\n 3-Motas\n");
		scanf("%d", &tipoDeEscolha);
		if (tipoDeEscolha == 1)
		{
			printf("Insira:\n 1-Ver todos\n 2-Procurar por marca\n 3-Procurar por intervalo de idade\n 4-Procurar por intervalo de potência\n 5-Pesquisa avançada\n");
			scanf("%d", &escolha);
		}
		if (tipoDeEscolha == 2)
		{
			printf("Insira:\n 1-Ver todos\n 2-Procurar por marca\n 3-Procurar por intervalo de idade\n 4-Procurar por intervalo de potência\n 5-Pesquisa avançada\n");
			scanf("%d", &escolha);
		}
		if (tipoDeEscolha == 3)
		{
			printf("Insira:\n 1-Ver todos\n 2-Procurar por marca\n 3-Procurar por intervalo de idade\n 4-Procurar por intervalo de potência\n 5-Pesquisa avançada\n");
			scanf("%d", &escolha);
		}

		if (escolha == 1)
		{
			VerTodos(tipoDeEscolha);
		}
		else if (escolha == 2)
		{
			ProcurarMarca(tipoDeEscolha);
		}
		else if (escolha == 3)
		{
			escolha = 0; //pq no fundo reutilizamos a mesma variavel para o "sair"
			ProcurarIdade(tipoDeEscolha);
		}
		else if (escolha == 4)
		{
			ProcurarPotencia(tipoDeEscolha);
		}
		else if (escolha == 5)
		{
			PesquisaAvancada();
		}
		else
		{
			//erro
		}


	}
	else if (escolha == 2)
	{
		printf("Insira a marca do veículo:\n");
		scanf(" %[^\n]s", marca);
		for (int i = 0; i<strlen(marca); i++)
			marca[i] = toupper(marca[i]);
		printf("Insira o modelo do veículo:\n");
		scanf(" %[^\n]s", modelo);
		for (int i = 0; i<strlen(modelo); i++)
			modelo[i] = toupper(modelo[i]);
		printf("Que tipo de veículo está a vender? Insira 1 para Comercial(2 lugares), 2 para  desportivo, 3 para supercarro, 4 para mota, 5 para camião, 6 para jipe, 7 para citadino,8 para familiar\n");
		scanf("%d", &tipoDeCarro);
		printf("Quantos anos tem o veículo?\n");
		scanf("%d", &ano);
		printf("Qual a cor do veículo?\n");
		scanf("%s", cor);


		if (tipoDeCarro != 4){

			printf("Qual a potencia(cv) do veículo?\n");
			scanf("%d", &potencia);
			printf("O veículo tem vidros eletricos?\n");
			char simOuNao[3];
			scanf("%s", simOuNao);
			for (int i = 0; i<strlen(simOuNao); i++)
				simOuNao[i] = toupper(simOuNao[i]);
			if (strcmp("SIM", simOuNao) == 0)
				vidrosEletricos = 1;
			else if ((strcmp("NAO", simOuNao) == 0) || (strcmp("NAO", simOuNao) == 0))
				vidrosEletricos = 0;
			strcpy(simOuNao, "");

			if (tipoDeCarro != 4 && tipoDeCarro != 5)
			{
				printf("O carro é descapotável?\n");
				scanf("%s", simOuNao);
				for (int i = 0; i<strlen(simOuNao); i++)
					simOuNao[i] = toupper(simOuNao[i]);
				if (strcmp("SIM", simOuNao) == 0)
					descapotavel = 1;
				else if ((strcmp("NAO", simOuNao) == 0) || (strcmp("NAO", simOuNao) == 0))
					descapotavel = 0;
				strcpy(simOuNao, "");
			}

			if (tipoDeCarro != 4)
			{
				printf("O combustivel é diesel?\n");
				scanf("%s", simOuNao);
				for (int i = 0; i<strlen(simOuNao); i++)
					simOuNao[i] = toupper(simOuNao[i]);
				if (strcmp("SIM", simOuNao) == 0)
					diesel = 1;
				else if ((strcmp("NAO", simOuNao) == 0) || (strcmp("NAO", simOuNao) == 0))
					diesel = 0;
				strcpy(simOuNao, "");
			}

			printf("O veículo tem ar condicionado?\n");
			scanf("%s", simOuNao);
			for (int i = 0; i<strlen(simOuNao); i++)
				simOuNao[i] = toupper(simOuNao[i]);
			if (strcmp("SIM", simOuNao) == 0)
				arCondicionado = 1;
			else if ((strcmp("NAO", simOuNao) == 0) || (strcmp("NAO", simOuNao) == 0))
				arCondicionado = 0;
			strcpy(simOuNao, "");


			printf("O veículo tem quantos airbags?\n");
			scanf("%d", &airbag);
		}
		if (tipoDeCarro == 4)
		{
			vidrosEletricos = 0;
			descapotavel = 0;
			arCondicionado = 0;
			airbag = 0;
			diesel = 0;

			printf("Qual a potencia(cm3) do veiculo motorizado?\n");
			scanf("%d", &potencia);

			printf("Qual o tipo de veículo motorizado que pretende vender? Insira 1 para Chopper, 2 para Quadriciclo, 3 para Scooter, 4 para Trail, 5 para SuperSport, 6 para Turismo, 7 para Todo-o-Terreno, 8 para 125 \n");
			scanf("%d", &tipoDeMotaNome);
		}
		else if (tipoDeCarro == 5)
		{
			descapotavel = 0;
			diesel = 0;

			printf("Qual o tipo de camião que pretende vender? Insira 1 para Pesados de 3.5t até 7.5t, 2 para Pesados com mais de 7.5t, 3 para Basculante, 4 para Trator de Semi-Reboque \n");
			scanf("%d", &tipoDeCamiaoNome);
		}
		if (tipoDeCarro != 4 && tipoDeCarro != 5)
		{
			int precoEst = precoEstimado(marca, modelo, ano, potencia, diesel, vidrosEletricos, descapotavel, arCondicionado, airbag, tipoDeCarro);
			if (precoEst != -1) //se for -1 algo correu mal ao processar o preco estimado (return -1)
			{
				printf("Qual o preço que pretende vender este veículo? O preço estimado para este veículo é %d\n", precoEst);
				scanf("%d", &preco);
			}
			else
			{
				menu();
			}

			carro = insereCarro(marca, modelo, ano, preco, cor, potencia, diesel, vidrosEletricos, descapotavel, arCondicionado, airbag, precoEst, tipoDeCarro, carro);
		}
		else if (tipoDeCarro == 4)
		{
			int precoEst2 = precoEstimado2(marca, modelo, ano, potencia, tipoDeMotaNome);
			if (precoEst2 != -1) //se for -1 algo correu mal ao processar o preco estimado (return -1)
			{
				printf("Qual o preço que pretende vender este veículo? O preço estimado para este veículo é %d\n", precoEst2);
				scanf("%d", &preco);
			}
			else
			{
				menu();
			}
			carro = insereMota(marca, modelo, ano, preco, cor, potencia, precoEst2, tipoDeCarro, tipoDeMotaNome, carro);
		}
		else if (tipoDeCarro == 5)
		{
			int precoEst3 = precoEstimado3(marca, modelo, ano, potencia, diesel, vidrosEletricos, arCondicionado, airbag, tipoDeCamiaoNome);
			if (precoEst3 != -1) //se for -1 algo correu mal ao processar o preco estimado (return -1)
			{
				printf("Qual o preço que pretende vender este veículo? O preço estimado para este veículo é %d\n", precoEst3);
				scanf("%d", &preco);
			}
			else
			{
				menu();
			}

			carro = insereCamiao(marca, modelo, ano, preco, cor, potencia, diesel, vidrosEletricos, arCondicionado, airbag, precoEst3, tipoDeCarro, tipoDeCamiaoNome, carro);
		}
	}
	else if (escolha == 3)
	{
		Save();
	}

	if (escolha != 3)
		menu();
}

int main(int argc, const char * argv[]) {

	
	carro = NULL; //criar a primeira(ultima) struct (vazia) da lista
	carroPesquisaHead = NULL;
	Open();
	if (didRead == 0)
	{
		// CARROS
		carro = insereCarro("BUGATTI", "VEYRON", 0, 1500000, "Preto", 650, 0, 1, 0, 1, 6, precoEstimado("BUGATTI", "VEYRON", 0, 650, 0, 1, 0, 1, 6, 3), 3, carro);
		carro = insereCarro("BUGATTI", "VEYRON SUPER SPORT", 0, 1700000, "Laranja", 700, 0, 1, 0, 1, 6, precoEstimado("BUGATTI", "VEYRON SUPER SPORT", 0, 700, 0, 1, 0, 1, 6, 3), 3, carro);

		carro = insereCarro("FERRARI", "F430 F1", 2, 260000, "Vermelho", 500, 0, 1, 0, 1, 5, precoEstimado("FERRARI", "F430 F1", 2, 500, 0, 1, 0, 1, 5, 3), 3, carro);
		carro = insereCarro("FERRARI", "CALIFORNIA", 6, 230000, "Branco", 450, 0, 1, 1, 1, 4, precoEstimado("FERRARI", "CALIFORNIA", 6, 450, 0, 1, 1, 1, 4, 3), 3, carro);
		carro = insereCarro("FERRARI", "FF FF", 3, 275000, "Preto", 660, 0, 1, 0, 1, 5, precoEstimado("FERRARI", "FF FF", 6, 660, 0, 1, 0, 1, 5, 3), 3, carro);

		carro = insereCarro("LAMBORGHINI", "GALLARDO", 5, 200000, "Preto", 550, 0, 1, 0, 1, 6, precoEstimado("LAMBORGHINI", "GALLARDO", 5, 550, 0, 1, 0, 1, 6, 3), 3, carro);
		carro = insereCarro("LAMBORGHINI", "AVENTADOR", 4, 300000, "Laranja", 700, 0, 1, 0, 1, 6, precoEstimado("LAMBORGHINI", "AVENTADOR", 4, 700, 0, 1, 0, 1, 6, 3), 3, carro);
		carro = insereCarro("LAMBORGHINI", "HURACAN", 0, 250000, "Preto", 600, 0, 1, 0, 1, 6, precoEstimado("LAMBORGHINI", "HURACAN", 0, 600, 0, 1, 0, 1, 6, 3), 3, carro);

		carro = insereCarro("MASERATI", "GRANTURISMO", 6, 105000, "Cinzento", 440, 0, 1, 0, 1, 10, precoEstimado("MASERATI", "GRANTURISMO", 6, 440, 0, 1, 0, 1, 10, 3), 3, carro);
		carro = insereCarro("MASERATI", "GRANCABRIO", 3, 130000, "Cinzento", 460, 0, 1, 1, 1, 6, precoEstimado("MASERATI", "GRANCABRIO", 6, 460, 0, 1, 1, 1, 6, 3), 3, carro);
		carro = insereCarro("MASERATI", "422 BITURBO", 26, 8000, "Cinzento", 220, 0, 0, 0, 1, 0, precoEstimado("MASERATI", "422BITURBO", 26, 440, 0, 1, 0, 1, 0, 2), 2, carro);

		carro = insereCarro("MERCEDES BENZ", "C220", 4, 23000, "Preto", 170, 1, 1, 0, 1, 8, precoEstimado("MERCEDES", "C220", 4, 170, 1, 1, 0, 1, 8, 8), 8, carro);
		carro = insereCarro("MERCEDES BENZ", "GLK250", 2, 55000, "Cinzento", 200, 1, 1, 0, 1, 8, precoEstimado("MERCEDES", "GLK250", 2, 200, 1, 1, 0, 1, 8, 6), 6, carro);
		carro = insereCarro("MERCEDES BENZ", "A180", 0, 29000, "Preto", 110, 1, 1, 0, 1, 6, precoEstimado("MERCEDES", "A180", 0, 110, 1, 1, 0, 1, 6, 2), 7, carro);

		carro = insereCarro("JAGUAR", "F-TYPE", 0, 88000, "Branco", 340, 0, 1, 1, 1, 6, precoEstimado("JAGUAR", "F-TYPE", 0, 340, 0, 1, 1, 1, 6, 2), 2, carro);
		carro = insereCarro("JAGUAR", "MK-SALOON", 58, 45000, "Verde", 112, 0, 0, 0, 0, 0, precoEstimado("JAGUAR", "MK-SALOON", 58, 112, 0, 0, 0, 0, 0, 2), 2, carro);
		carro = insereCarro("JAGUAR", "XF-DLUXURY", 3, 40000, "Cinzento", 200, 1, 1, 0, 1, 10, precoEstimado("JAGUAR", "XF-DLUXURY", 3, 200, 1, 1, 0, 1, 10, 7), 7, carro);

		carro = insereCarro("PORCSHE", "PANAMERA", 1, 80000, "Preto", 300, 1, 1, 0, 1, 10, precoEstimado("PORCSHE", "PANAMERA", 1, 300, 1, 1, 0, 1, 10, 7), 7, carro);
		carro = insereCarro("PORCSHE", "CAYENNE", 3, 70000, "Preto", 245, 1, 1, 0, 1, 10, precoEstimado("PORCSHE", "CAYENNE", 3, 245, 1, 1, 0, 1, 10, 6), 6, carro);
		carro = insereCarro("PORCSHE", "718 RSK", 54, 17500, "Cinzento", 70, 0, 0, 1, 0, 0, precoEstimado("PORCSHE", "718 RSK", 54, 70, 0, 0, 1, 0, 0, 2), 2, carro);

		carro = insereCarro("ASTON MARTIN", "VANTAGE S ROADSTER", 2, 140000, "Preto", 435, 0, 1, 1, 1, 10, precoEstimado("ASTON MARTIN", "VANTAGE S ROADSTER", 2, 435, 0, 1, 1, 1, 10, 2), 2, carro);
		carro = insereCarro("ASTON MARTIN", "DB9 VOLANTE", 6, 112000, "Cinzento", 475, 0, 1, 1, 1, 4, precoEstimado("ASTON MARTIN", "DB9 VOLANTE", 6, 475, 0, 1, 1, 1, 4, 2), 2, carro);

		carro = insereCarro("ROLLS ROYCE", "SEDANCA DE VILLE", 78, 120000, "Cinzento", 115, 0, 0, 0, 0, 0, precoEstimado("ROLLS ROYCE", "SEDANCA DE VILLE", 78, 115, 0, 0, 0, 0, 0, 7), 7, carro);
		carro = insereCarro("ROLLS ROYCE", "CORNICHE", 44, 52000, "Cinzento", 172, 0, 0, 1, 0, 0, precoEstimado("ROLLS ROYCE", "CORNICHE", 44, 172, 0, 0, 1, 0, 0, 1), 2, carro);

		carro = insereCarro("BENTLEY", "CONTINENTAL", 8, 120000, "Preto", 560, 0, 1, 1, 1, 8, precoEstimado("BENTLEY", "CONTINENTAL", 8, 560, 0, 1, 1, 1, 8, 3), 3, carro);
		carro = insereCarro("BENTLEY", "S2", 52, 45000, "Cinzento", 190, 0, 0, 0, 0, 0, precoEstimado("BENTLEY", "S2", 52, 190, 0, 0, 0, 0, 0, 2), 2, carro);

		carro = insereCarro("ALFA ROMEO", "GIULIETTA", 3, 17000, "Preto", 105, 1, 1, 0, 1, 6, precoEstimado("ALFA ROMEO", "GIULIETTA", 3, 105, 1, 1, 0, 1, 6, 7), 7, carro);
		carro = insereCarro("ALFA ROMEO", "MITO", 5, 12000, "Branco", 90, 1, 1, 0, 1, 4, precoEstimado("ALFA ROMEO", "MITO", 5, 90, 1, 1, 0, 1, 4, 7), 7, carro);
		carro = insereCarro("ALFA ROMEO", "GT JUNIOR", 44, 17000, "Amarelo", 95, 0, 0, 0, 0, 0, precoEstimado("ALFA ROMEO", "GT JUNIOR", 44, 95, 0, 0, 0, 0, 0, 2), 2, carro);

		carro = insereCarro("AUDI", "Q5", 2, 37900, "Preto", 143, 1, 1, 0, 1, 8, precoEstimado("AUDI", "Q5", 2, 143, 1, 1, 0, 1, 8, 6), 6, carro);
		carro = insereCarro("AUDI", "A7", 2, 48000, "Branco", 204, 1, 1, 0, 1, 8, precoEstimado("AUDI", "A7", 2, 204, 1, 1, 0, 1, 8, 2), 2, carro);
		carro = insereCarro("AUDI", "R8", 2, 132000, "Vermelho", 525, 0, 1, 0, 1, 8, precoEstimado("AUDI", "R8", 2, 525, 0, 1, 0, 1, 8, 3), 3, carro);

		carro = insereCarro("PEUGEOT", "206", 10, 3500, "Cinzento", 75, 0, 1, 0, 1, 3, precoEstimado("PEUGEOT", "206", 10, 75, 0, 1, 0, 1, 3, 1), 1, carro);
		carro = insereCarro("PEUGEOT", "RCZ", 2, 26500, "Cinzento", 163, 1, 1, 0, 1, 6, precoEstimado("PEUGEOT", "RCZ", 2, 163, 1, 1, 0, 1, 6, 2), 2, carro);

		carro = insereCarro("SEAT", "LEON", 2, 18500, "Cinzento", 105, 1, 1, 0, 1, 6, precoEstimado("SEAT", "LEON", 2, 105, 1, 1, 0, 1, 6, 7), 7, carro);
		carro = insereCarro("SEAT", "IBIZA FR", 9, 4500, "Preto", 110, 1, 1, 0, 1, 2, precoEstimado("SEAT", "IBIZA FR", 9, 110, 1, 1, 0, 1, 2, 1), 1, carro);

		carro = insereCarro("OPEL", "CORSA", 16, 1300, "Preto", 55, 0, 1, 0, 0, 1, precoEstimado("OPEL", "CORSA", 16, 55, 0, 1, 0, 0, 1, 1), 1, carro);
		carro = insereCarro("OPEL", "ASTRA GTC", 2, 18000, "Preto", 110, 1, 1, 0, 1, 5, precoEstimado("OPEL", "ASTRA GTC", 2, 110, 1, 1, 0, 1, 5, 2), 2, carro);
		carro = insereCarro("OPEL", "INSIGNIA", 5, 19000, "Branco", 160, 1, 1, 0, 1, 5, precoEstimado("OPEL", "INSIGNIA", 5, 160, 1, 1, 0, 1, 5, 8), 8, carro);

		carro = insereCarro("RENAULT", "TWINGO", 20, 400, "Branco", 49, 0, 0, 0, 0, 0, precoEstimado("RENAULT", "TWINGO", 20, 49, 0, 0, 0, 0, 0, 7), 7, carro);
		carro = insereCarro("RENAULT", "CLIO", 10, 3000, "Branco", 75, 1, 1, 0, 1, 2, precoEstimado("RENAULT", "CLIO", 10, 75, 1, 1, 0, 1, 2, 1), 1, carro);
		carro = insereCarro("RENAULT", "MEGANE GT LINE", 5, 11000, "Cinzento", 110, 1, 1, 0, 1, 5, precoEstimado("RENAULT", "MEGANE GT LINE", 5, 110, 1, 1, 0, 1, 5, 2), 2, carro);

		carro = insereCarro("VW", "POLO", 8, 4000, "Cinzento", 75, 1, 1, 0, 1, 4, precoEstimado("VW", "POLO", 8, 75, 1, 1, 0, 1, 4, 7), 7, carro);
		carro = insereCarro("VW", "GOLF", 2, 19000, "Azul", 105, 1, 1, 0, 1, 5, precoEstimado("VW", "GOLF", 2, 105, 1, 1, 0, 1, 5, 7), 7, carro);
		carro = insereCarro("VW", "LUPO", 13, 2000, "Preto", 75, 0, 1, 0, 1, 2, precoEstimado("VW", "POLO", 13, 75, 0, 1, 0, 1, 2, 7), 7, carro);

		carro = insereCarro("VOLVO", "V40", 3, 20000, "Branco", 100, 1, 1, 0, 1, 6, precoEstimado("VOLVO", "V40", 3, 100, 1, 1, 0, 1, 6, 7), 7, carro);
		carro = insereCarro("VOLVO", "XC60", 1, 50000, "Preto", 180, 1, 1, 0, 1, 6, precoEstimado("VOLVO", "XC60", 1, 180, 1, 1, 0, 1, 6, 6), 6, carro);
		carro = insereCarro("VOLVO", "V70", 3, 25000, "Cinzento", 130, 1, 1, 0, 1, 10, precoEstimado("VOLVO", "V70", 3, 130, 1, 1, 0, 1, 10, 8), 8, carro);

		carro = insereCarro("BMW", "320D", 2, 25000, "Branco", 130, 1, 1, 0, 1, 5, precoEstimado("BMW", "320D", 2, 130, 1, 1, 0, 1, 5, 7), 7, carro);
		carro = insereCarro("BMW", "X5", 1, 79000, "Preto", 250, 1, 1, 0, 1, 5, precoEstimado("BMW", "X5", 1, 250, 1, 1, 1, 0, 5, 6), 6, carro);
		carro = insereCarro("BMW", "Z4", 5, 35000, "Preto", 204, 0, 1, 1, 1, 3, precoEstimado("BMW", "Z4", 5, 204, 0, 1, 1, 1, 5, 2), 2, carro);

		carro = insereCarro("CITROEN", "SAXO", 18, 600, "Branco", 60, 0, 0, 0, 1, 0, precoEstimado("CITROEN", "SAXO", 18, 60, 0, 0, 0, 1, 0, 1), 1, carro);
		carro = insereCarro("CITROEN", "C3", 4, 8000, "Cinzento", 90, 1, 1, 0, 1, 3, precoEstimado("CITROEN", "C3", 4, 90, 1, 1, 0, 1, 3, 7), 7, carro);
		carro = insereCarro("CITROEN", "XSARA", 11, 1500, "Cinzento", 70, 0, 0, 0, 1, 0, precoEstimado("CITROEN", "XSARA", 11, 70, 0, 0, 0, 1, 0, 7), 7, carro);


		//MOTAS


		carro = insereMota("BMW", "RGS", 2, 16500, "Azul", 1170, precoEstimado2("BMW", "RGS", 2, 1170, 4), 4, 4, carro);
		carro = insereMota("DUCATI", "MULTISTRADA", 4, 13000, "Branco", 1200, precoEstimado2("DUCATI", "MULTISTRADA", 4, 1200, 4), 4, 4, carro);

		carro = insereMota("BMW", "GR 1200", 1, 17500, "Branco", 1170, precoEstimado2("BMW", "GR 1200", 1, 1170, 7), 4, 7, carro);
		carro = insereMota("KAWASAKI", "XK 450F", 7, 2900, "Verde", 449, precoEstimado2("KAWASAKI", "XK 450F", 7, 449, 7), 4, 7, carro);

		carro = insereMota("HARLEY DAVIDSON", "HERITAGE SOFTAIL", 22, 18000, "Cinzento", 1340, precoEstimado2("HARLEY DAVIDSON", "HERITAGE SOFTAIL", 22, 1340, 1), 4, 1, carro);
		carro = insereMota("HARLEY DAVIDSON", "FLSTC", 1, 19500, "Vermelho", 1690, precoEstimado2("HARLEY DAVIDSON", "FLSTC", 1, 1690, 1), 4, 1, carro);

		carro = insereMota("KTM", "450 XC", 5, 5000, "Laranja", 450, precoEstimado2("KTM", "450 XC", 5, 450, 2), 4, 2, carro);
		carro = insereMota("HONDA", "TRX 650", 10, 5900, "Vermelho", 650, precoEstimado2("HONDA", "TRX 650", 10, 650, 2), 4, 2, carro);

		carro = insereMota("VESPA", "50", 23, 1100, "Vermelho", 50, precoEstimado2("VESPA", "50", 23, 50, 3), 4, 3, carro);
		carro = insereMota("BMW", "C650 GT", 3, 7750, "Cinzento", 650, precoEstimado2("BMW", "C650 GT", 3, 650, 3), 4, 3, carro);

		carro = insereMota("KAWASAKI", "NINJA ZX", 6, 9000, "Branco", 1000, precoEstimado2("KAWASAKI", "NINJA ZX", 6, 1000, 5), 4, 5, carro);
		carro = insereMota("DUCATI", "1199 PANIGALE", 3, 18500, "Vermelho", 1198, precoEstimado2("DUCATI", "1199 PANIGALE", 3, 1198, 5), 4, 5, carro);

		carro = insereMota("HONDA", "GOLDWING", 12, 13800, "Branco", 1800, precoEstimado2("HONDA", "GOLDWING", 12, 1800, 6), 4, 6, carro);
		carro = insereMota("YAMAHA", "FJR", 4, 11500, "Preto", 1298, precoEstimado2("YAMAHA", "FJR", 4, 1298, 6), 4, 6, carro);

		carro = insereMota("SUZUKI", "DR", 5, 2500, "Preto", 125, precoEstimado2("SUZUKI", "DR", 5, 125, 8), 4, 8, carro);
		carro = insereMota("APRILIA", "RX 125", 2, 3500, "Azul", 125, precoEstimado2("APRILIA", "RX 125", 2, 125, 8), 4, 8, carro);

		//CAMIÕES

		carro = insereCamiao("VOLVO", "FM13", 7, 50000, "Branco", 400, 1, 1, 1, 1, precoEstimado3("VOLVO", "FM13", 7, 400, 1, 1, 1, 1, 3), 5, 3, carro);
		carro = insereCamiao("MERCEDES BENZ", "SK3538", 19, 19500, "Branco", 380, 1, 0, 0, 0, precoEstimado3("MERCEDES", "SK35383", 19, 380, 1, 0, 0, 0, 3), 5, 3, carro);
		carro = insereCamiao("SCANIA", "113E 320", 19, 18000, "Branco", 320, 1, 0, 0, 0, precoEstimado3("SCANIA", "113E 320", 19, 320, 1, 0, 0, 0, 3), 5, 3, carro);
		carro = insereCamiao("MAN", "TGA", 8, 55000, "Azul", 480, 1, 1, 1, 0, precoEstimado3("MAN", "TGA", 8, 480, 1, 1, 1, 0, 3), 5, 3, carro);

		carro = insereCamiao("MITSUBISHI", "FUSO 7C18", 7, 19500, "Cinzento", 180, 1, 1, 1, 2, precoEstimado3("MITSUBISHI", "FUSO 7C18", 7, 180, 1, 1, 1, 2, 1), 5, 1, carro);
		carro = insereCamiao("TOYOTA", "DYNA 75/42", 4, 18500, "Cinzento", 150, 1, 1, 1, 2, precoEstimado3("TOYOTA", "DYNA 75/42", 4, 150, 1, 1, 1, 2, 1), 5, 1, carro);
		carro = insereCamiao("NISSAN", "ATLEON", 14, 8500, "Branco", 140, 1, 0, 1, 0, precoEstimado3("NISSAN", "ATLEON", 14, 140, 1, 0, 1, 0, 1), 5, 1, carro);
		carro = insereCamiao("OPEL", "MOVANO CDTI", 3, 14800, "Branco", 125, 1, 1, 1, 2, precoEstimado3("OPEL", "MOVANO CDTI", 3, 125, 1, 1, 1, 2, 1), 5, 1, carro);

		carro = insereCamiao("RENAULT", "MIDLUM 240 DXI", 8, 20000, "Amarelo", 240, 1, 1, 1, 0, precoEstimado3("RENAULT", "MIDLUM 240 DXI", 8, 240, 1, 1, 1, 0, 2), 5, 2, carro);
		carro = insereCamiao("MERCEDES BENZ", "ATEGO 10/18", 12, 14000, "Branco", 180, 1, 0, 1, 0, precoEstimado3("MERCEDES", "ATEGO 10/18", 12, 180, 1, 0, 1, 0, 2), 5, 2, carro);
		carro = insereCamiao("DAF", "XF", 7, 25000, "Branco", 510, 1, 1, 1, 0, precoEstimado3("DAF", "XF", 7, 510, 1, 1, 1, 0, 2), 5, 2, carro);
		carro = insereCamiao("MAN", "TGM", 4, 25000, "Preto", 250, 1, 1, 1, 2, precoEstimado3("MAN", "TGM", 4, 250, 1, 1, 1, 2, 2), 5, 2, carro);

		carro = insereCamiao("MAN", "TGX", 0, 62000, "Preto", 440, 1, 1, 1, 2, precoEstimado3("MAN", "TGX", 0, 440, 1, 1, 1, 2, 4), 5, 4, carro);
		carro = insereCamiao("SCANIA", "R420", 10, 29000, "Branco", 320, 1, 0, 1, 0, precoEstimado3("SCANIA", "R420", 10, 320, 1, 0, 1, 0, 4), 5, 4, carro);
		carro = insereCamiao("VOLVO", "FH12", 11, 59000, "Preto", 460, 1, 0, 1, 0, precoEstimado3("VOLVO", "FH12", 0, 460, 1, 0, 1, 0, 4), 5, 4, carro);
		carro = insereCamiao("RENAULT", "PREMIUM 450 DXI", 6, 35000, "Cinzento", 450, 1, 1, 1, 2, precoEstimado3("RENAULT", "PREMIUM 450 DXI", 6, 450, 1, 1, 1, 2, 4), 5, 4, carro);

	}
	menu();


}
